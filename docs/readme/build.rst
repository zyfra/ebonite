=============
Ebonite Build
=============

Build module is responsible for building and running images. For now,
ebonite supports only docker images, but it is possible to implement some classes
to add support for other types of things that can be built.

Here are build abstractions:

* :class:`~ebonite.build.provider.ProviderBase` - provides files for the image. Builtin implementations: :class:`~ebonite.build.provider.MLModelProvider` which generates files from :class:`~ebonite.core.objects.core.Model` object. Also there is :class:`~ebonite.build.provider.MLModelMultiProvider` if you want multiple models in one image.

* :class:`~ebonite.build.builder.BuilderBase` - builds images from files generated by :class:`~ebonite.build.provider.ProviderBase`. Builtin implementation: :class:`~ebonite.build.builder.docker_builder.DockerBuilder` builds docker images.

* :class:`~ebonite.build.runner.RunnerBase` - runs images. Builtin implementation: :class:`~ebonite.build.runner.SimpleDockerRunner` - runs docker images locally or on remote server.

Also, these helper functions are available:

* :func:`~ebonite.build.build_model_docker` - builds docker image from model.

* :func:`~ebonite.build.run_docker_img` - runs docker image.