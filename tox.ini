[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    docs,
    {py36,py37},
    report
ignore_basepython_conflict = true

[gh-actions]
python =
    3.6: clean,check,docs,py36,report,coveralls
    3.7: clean,check,docs,py37,report

[testenv]
; workaround to install PyTorch CPU version which is not available in PyPi
; GPU version is too large and doesn't work on machines without CUDA devices
install_command = pip install -f https://download.pytorch.org/whl/torch_stable.html {opts} {packages}
basepython =
    py36: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    {bootstrap,clean,check,docs,report,codecov,coveralls}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests{:}{toxinidir}/tests_requirements
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
    pytest==5.2.2
    pytest-cov
    coverage==4.5.4
    ; coveralls 5.x is buggy for now
commands =
    pytest --cov --cov-report= --cov-append --disable-warnings -m "not docker and not tf_v1" tests
    pytest --cov --cov-report= --cov-append --disable-warnings tests_requirements
    pytest --cov --cov-report= --cov-append --disable-warnings -m docker tests
    pip uninstall -y tensorflow
    pip install "tensorflow<2"
    pytest --cov --cov-report= --cov-append --disable-warnings -m tf_v1 tests

extras =
    testing

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort<5.0.0
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests tests_requirements setup.py examples
    isort --check-only --diff --recursive src tests tests_requirements setup.py examples

[testenv:docs]
usedevelop = true
whitelist_externals = rm
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    rm -rf docs/reference
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
;    sphinx-build -b linkcheck docs dist/docs

[testenv:coveralls]
passenv =
    COVERALLS_REPO_TOKEN
    CI_BRANCH
deps =
    coveralls
    coverage==4.5.4
    ; coveralls 5.x is buggy for now
skip_install = true
commands =
    coveralls

[testenv:codecov]
passenv =
    GITHUB_*
    CODECOV_TOKEN
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands =
    coverage erase
skip_install = true

